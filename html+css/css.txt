高度塌陷问题
1.直接将父级元素的长宽写死
缺点：当子元素的大小发生改变时，父级元素不能够自适应
2.为父级元素设置浮动
一般出现高度塌陷大多是由于浮动引起的
缺点：当设置浮动后父级元素宽度会跟着发生改变
3.设置绝对定位
4.设置元素为inline-block
5.将overflow属性设置为hidden（推荐使用）
此方法相对于其他方式来说，副作用最小。


CSS 选择符有哪些
1.id选择器（ # myid）
2.类选择器（.myclassname）
3.标签选择器（div, h1, p）
4.相邻选择器（h1 + p）
5.子选择器（ul > li）
6.后代选择器（li a）
7.通配符选择器（ * ）
8.属性选择器（a[rel = “external”]）
9.伪类选择器（a: hover, li:nth-child）


优先级算法如何计算
优先级：
!important > id > class > tag
important 比 内联优先级高,但内联比 id 要高


position的几个属性
static 默认，指示元素出现在正常的文档流中
relative（相对定位） 相对于该元素在文档流中的正常位置进行偏移定位，占用文档流。常用作绝对定位元素的容器块。
absolute（绝对定位）较少直接单独使用在正常的文档流中，而是配合relative来进行一些更灵活更精确的定位。换言之，就是绝对定位主要运行于进行了相对定位的元素框架层里面，然后依据该层的最左上点作为基点进行便宜。常用作动画结构。
fixed（固定定位）相对于浏览器窗口的最左上点作为基点进行偏移定位，应用比较少，主要是运用与浏览器贴边定位。和绝对定位一样可以用在固定定位的框架层里面。常用作漂浮广告，返回顶部。
z-index属性，使用以上三种定位后，都会使正常的文档流在一定程度上发生变化，造成元素显示重叠问题，也就是上文所提及到的塌陷问题。使用该属性能够设置优先级，数值越大，优先级越高，该属性只对使用了定位的元素有效。
新增的属性：
sticky（粘性布局） 结合了相对和固定定位两种，常见使用场景是实现头部导航栏固定。


垂直水平居中
使用绝对定位 + left：50%，top: 50% + margin-left:(自身宽度的一半),margin-top:(自身高度的一半)
使用绝对定位 + left：50% ，top: 50%+ translate(-50%,-50%)
使用绝对定位 + left: 0，right: 0, top: 0, bottom: 0 + margin：auto
使用弹性盒子布局，给父标签设置属性，display: flex; justify-content: center; （水平居中）align-items: center;（垂直居中）


CSS隐藏元素的几种方法（至少说出三种）
Opacity:元素本身依然占据它自己的位置并对网页的布局起作用。它也将响应用户交互;
Visibility:与 opacity 唯一不同的是它不会响应任何用户交互。此外，元素在读屏软件中也会被隐藏;
Display:display 设为 none 任何对该元素直接打用户交互操作都不可能生效。此外，读屏软件也不会读到元素的内容。这种方式产生的效果就像元素完全不存在;
Position:不会影响布局，能让元素保持可以操作;
Clip-path:clip-path 属性还没有在 IE 或者 Edge 下被完全支持。如果要在你的 clip-path 中使用外部的 SVG 文件，浏览器支持度还要低;


